# Marco 2.0 Production Nginx Configuration with SSL
# HTTPS-enabled configuration for production deployment

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Load dynamic modules
load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # WASM MIME type configuration
    map $uri $wasm_content_type {
        ~\.wasm$ application/wasm;
        default "";
    }

    # Logging format for analytics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time $ssl_protocol $ssl_cipher';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/wasm;

    # Brotli compression (more efficient than gzip)
    brotli on;
    brotli_comp_level 6;
    brotli_min_length 1024;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/wasm;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # OCSP settings
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=websocket:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/s;

    # Upstream for WebRTC signaling
    upstream webrtc_signaling {
        server localhost:3001;
        keepalive 32;
    }

    # HTTP server - redirect all to HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name marco2.com www.marco2.com api.marco2.com ws.marco2.com;

        # ACME challenge for Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS server for main application
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name marco2.com www.marco2.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/live/marco2.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/marco2.com/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/live/marco2.com/chain.pem;

        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

        # Content Security Policy for WASM and WebRTC
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'wasm-unsafe-eval'; worker-src 'self' blob:; connect-src 'self' wss: ws: https:; media-src 'self' blob:; img-src 'self' data: blob:; style-src 'self' 'unsafe-inline'; font-src 'self' data:; object-src 'none'; base-uri 'self'; form-action 'self'" always;

        root /usr/share/nginx/html;
        index index.html;

        # Rate limiting for general requests
        limit_req zone=general burst=200 nodelay;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept-Encoding";
                
                # Enable CORS for fonts if needed
                location ~* \.(woff|woff2|ttf|eot)$ {
                    add_header Access-Control-Allow-Origin "*";
                    add_header Access-Control-Allow-Methods "GET, OPTIONS";
                    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
                }
            }

            # WASM files with special headers
            location ~* \.wasm$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Cross-Origin-Embedder-Policy "require-corp";
                add_header Cross-Origin-Opener-Policy "same-origin";
                add_header Content-Type "application/wasm";
                add_header Vary "Accept-Encoding";
            }

            # Service Worker - no caching
            location /sw.js {
                expires 0;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
            }

            # Manifest file
            location /manifest.json {
                expires 1d;
                add_header Cache-Control "public";
            }
        }

        # WebRTC signaling WebSocket proxy
        location /ws/signaling {
            limit_req zone=websocket burst=5 nodelay;
            
            proxy_pass http://webrtc_signaling;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            # Add API-specific headers
            add_header X-API-Version "4.3.0" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "https://marco2.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
            
            # Proxy to API server or serve static API responses
            try_files $uri $uri/ =404;
        }

        # Analytics and monitoring endpoints (restricted)
        location /analytics {
            # Restrict access to analytics data
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            return 200 "Analytics endpoint - access restricted";
            add_header Content-Type text/plain;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ /(\.git|\.env|package\.json|Dockerfile|docker-compose) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security.txt for responsible disclosure
        location /.well-known/security.txt {
            return 200 "Contact: security@marco2.com\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\nCanonical: https://marco2.com/.well-known/security.txt\n";
            add_header Content-Type text/plain;
        }
    }

    # API subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.marco2.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/live/marco2.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/marco2.com/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/live/marco2.com/chain.pem;

        # API-specific security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-API-Version "4.3.0" always;

        # Rate limiting for API
        limit_req zone=api burst=50 nodelay;

        location / {
            # CORS headers
            add_header Access-Control-Allow-Origin "https://marco2.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type 'text/plain charset=UTF-8';
                add_header Content-Length 0;
                return 204;
            }
            
            # Proxy to API server
            proxy_pass http://localhost:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # WebSocket subdomain
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name ws.marco2.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/live/marco2.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/marco2.com/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/live/marco2.com/chain.pem;

        # WebSocket-specific headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        location / {
            limit_req zone=websocket burst=10 nodelay;
            
            proxy_pass http://webrtc_signaling;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
    }
}
